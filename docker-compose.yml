volumes: 
  postgres_data: 
    driver: local

services:

  dan-ms-usuarios:
   container_name: dan-ms-usuarios
   image: criquelme05/dan-ms-usuarios:latest     
   ports:
    - "9000:8080"
   environment:
    - "SPRING_PROFILES_ACTIVE=docker"
    - "SERVER_PORT=8080"
    - "SPRING_APPLICATION_NAME=usuario"
    - "SPRING_DATASOURCE_URL=jdbc:mysql://db-mysql:3306/dan?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC"
    - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka"
   networks:
    - app

  dan-ms-material:
   container_name: dan-ms-material
   image: criquelme05/dan-ms-material:latest     
   ports:
    - "9001:8080"
   environment:
    - "SPRING_PROFILES_ACTIVE=docker"
    - "SERVER_PORT=8080"
    - "SPRING_APPLICATION_NAME=material"
    - "SPRING_DATASOURCE_URL=jdbc:mysql://db-mysql:3306/ms_material?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC"
    - "spring.artemis.host=artemis"
    - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka"
    - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak:8080/auth/realms/dan-realm"    
   networks:
    - app

  dan-ms-pedidos:
   container_name: dan-ms-pedidos
   image: criquelme05/dan-ms-pedidos:latest
   ports: 
    - "9002:8080"
   environment:
    - "SPRING_PROFILES_ACTIVE=docker"
    - "SERVER_PORT=8080"
    - "SPRING_APPLICATION_NAME=pedido"
    - "SPRING_DATASOURCE_URL=jdbc:mysql://db-mysql:3306/ms_pedidos?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC"
    - "spring.artemis.host=artemis"
    - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka"
    - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak:8080/auth/realms/dan-realm"  
   networks:
    - app

  dan-ms-cuenta:
   container_name: dan-ms-cuenta
   image: criquelme05/dan-ms-cuenta:latest     
   ports:
    - "9003:8080"
   environment:
    - "SPRING_PROFILES_ACTIVE=docker"
    - "SERVER_PORT=8080"
    - "SPRING_APPLICATION_NAME=cuenta"
    - "SPRING_DATASOURCE_URL=jdbc:mysql://db-mysql:3306/dan?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC"
    - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka"
   networks:
    - app

  eureka-server: 
    container_name: eureka-server
    image: criquelme05/dan-eureka-server:latest
    ports:
      - "8761:8761"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
    networks:
      - app

  db-mysql:
   container_name: db-mysql
   image: mysql
   command: --default-authentication-plugin=mysql_native_password
   restart: always
   environment:
    MYSQL_ROOT_PASSWORD: root
   volumes:
    - ./dan-ms-app.sql:/docker-entrypoint-initdb.d/init.sql
    - ./mysql-data:/var/lib/mysql
   networks:
    - infra
    - app  

  cloud-gateway:
    container_name: cloud-gateway
    image: criquelme05/dan-cloud-gateway:latest
    ports:
      - "9100:8080"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - "SERVER_PORT=8080"
      - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak:8080/auth/realms/dan-realm"  
    networks:
      - app
          
  adminer:
   container_name: adminer
   image: adminer
   restart: always
   ports:
    - 6001:8080
   networks:
    - infra
  
  artemis:
   container_name: artemis
   build: .\artemis
   image: dan-artemis
   restart: always
   ports:
     - "61616:61616" 
     - "8161:8161"
     - "5445:5445"
     - "5672:5672"
     - "1883:1883" 
     - "61613:61613"
   networks:
     - app
     - infra   

  prometheus: 
    container_name: prometheus
    image: prom/prometheus 
    restart: always 
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml 
    ports: 
      - 9090:9090
    networks: 
      - infra
      - app

  grafana: 
    container_name: grafana
    image: grafana/grafana
    restart: always
    ports: 
      - 3000:3000
    networks: 
      - infra


# POSTGRES KEYCLOAK
  postgres:
    container_name: postgres
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgressql/data
    environment: 
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - infra

  # KEYCLOAK
  localhost:
    container_name: keycloak
    image: jboss/keycloak:latest
    environment: 
      DB_VENDOR: POSTGRES 
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public 
      DB_PASSWORD: password 
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_FRONTEND_URL: http://keycloak:8080/auth
    ports: 
      - 8090:8080
    depends_on: 
      - postgres 
    networks:
      - app
      - infra

  
networks:
    infra:
      driver: bridge
    app:
      driver: bridge   
    
    



 
